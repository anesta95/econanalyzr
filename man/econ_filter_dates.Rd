% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/econ_filter_dates.R
\name{econ_filter_dates}
\alias{econ_filter_dates}
\title{Filter rows by a closed date interval (econanalyzr data; non-grouped)}
\usage{
econ_filter_dates(
  df,
  start_date = NULL,
  end_date = NULL,
  period_type = c("days", "weeks", "months", "quarters", "years"),
  period_amount = NULL,
  datetime_tz = "UTC",
  quiet = FALSE
)
}
\arguments{
\item{df}{A data frame validated by \code{\link[=check_econanalyzr_df]{check_econanalyzr_df()}}.}

\item{start_date}{Optional \code{Date} or \code{POSIXt}. If \code{NULL}, you must provide
\code{period_type} and \code{period_amount} to derive it.}

\item{end_date}{Optional \code{Date} or \code{POSIXt}. If \code{NULL}, defaults to the latest
non-NA date in \code{df}.}

\item{period_type}{Optional character scalar: one of \code{"days"}, \code{"weeks"},
\code{"months"}, \code{"quarters"}, \code{"years"}. Used only if \code{start_date} is \code{NULL}.}

\item{period_amount}{Optional positive integer-like scalar (e.g., \code{6} for
"last 6 months"). Used only if \code{start_date} is \code{NULL}.}

\item{datetime_tz}{Timezone for coercing \code{POSIXt} inputs to \code{Date}. Default \code{"UTC"}.}

\item{quiet}{If \code{FALSE} (default), emit a short message describing the filter.}
}
\value{
The filtered data frame, arranged by descending \code{date}.
}
\description{
Filters an econanalyzr-valid data frame by a \strong{closed} date interval
\verb{[start_date, end_date]}. If \code{start_date} is not supplied, you can specify a
period (\code{period_type} + \code{period_amount}) and the function will compute
\code{start_date = end_date - period} (with \code{end_date} defaulting to the latest
non-NA date in \code{df}).
}
\details{
The interval is \strong{inclusive}: \code{date >= start_date} and \code{date <= end_date}.
}
\examples{
# Last 6 months ending at the tableâ€™s latest date
# econ_filter_dates(df, period_type = "months", period_amount = 6)

# Between two explicit dates
# econ_filter_dates(
#   df,
#   start_date = as.Date("2024-01-01"),
#   end_date   = as.Date("2024-12-01")
# )

}
