% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/save_econanalyzr_chart.R
\name{save_econanalyzr_chart}
\alias{save_econanalyzr_chart}
\title{Save a ggplot chart with an econanalyzr-style filename}
\usage{
save_econanalyzr_chart(
  plt,
  folder,
  data = NULL,
  engine = c("ggsave", "grDevices", "ragg", "svglite"),
  device = "png",
  format = "png",
  width = 3600,
  height = 2010,
  units = "px",
  dpi = 320,
  scale = 1,
  bg = "white",
  overwrite = FALSE,
  quiet = FALSE,
  name_stem = NULL,
  ...
)
}
\arguments{
\item{plt}{A \code{ggplot} object.}

\item{folder}{Output directory path. Created if it doesn't exist.}

\item{data}{Optional data frame for filename construction. If \code{NULL}, uses \code{plt$data}.
Must satisfy \code{\link[=check_econanalyzr_df]{check_econanalyzr_df()}} or a classed error is raised.}

\item{engine}{Saving backend: one of \code{"ggsave"} (default), \code{"grDevices"}, \code{"ragg"}, \code{"svglite"}.}

\item{device}{For \code{engine = "ggsave"}, a device passed to \code{\link[ggplot2:ggsave]{ggplot2::ggsave()}}
(e.g., \code{"png"}, \code{"pdf"}, \code{"svg"}, \code{"jpeg"}, \code{"tiff"}, or a device function). Ignored otherwise.}

\item{format}{Output format/extension for non-ggsave engines. One of \code{"png"}, \code{"pdf"}, \code{"svg"},
\code{"jpeg"}, \code{"jpg"}, \code{"tiff"}, \code{"bmp"}. Default \code{"png"}.}

\item{width, height}{Plot size (defaults target a crisp social card): \code{width = 3600}, \code{height = 2010}.}

\item{units}{Units for \code{width}/\code{height}: \code{"px"} (default), \code{"in"}, \code{"cm"}, \code{"mm"}.}

\item{dpi}{Resolution in dots per inch (used for raster devices or when converting from inches).}

\item{scale}{Scaling factor (multiplies \code{width}/\code{height}) passed to \code{ggsave()} only.}

\item{bg}{Background: \code{"white"} (default), \code{"transparent"}, etc. Passed to raster devices / \code{ggsave()}.}

\item{overwrite}{If \code{FALSE} (default) and the target file exists, abort with a classed error.}

\item{quiet}{If \code{FALSE} (default) emit an informational message on success.}

\item{name_stem}{Optional override for the filename stem (no extension). Will be sanitized.
If \code{NULL}, the stem is built from \code{data}.}

\item{...}{Additional arguments forwarded to \code{\link[ggplot2:ggsave]{ggplot2::ggsave()}} when \code{engine = "ggsave"}.}
}
\value{
(Invisibly) the full file path written.
}
\description{
Builds a descriptive filename from the plot's data (or a supplied \code{data} frame):
\verb{<date_or_range>-<meta1>-<meta2>-...-<metaK>.<ext>}.
}
\details{
Filename construction reuses package helpers:
\itemize{
\item \code{\link[=make_file_name_date]{make_file_name_date()}} for the date stem (single \code{YYYY-MM-DD} or \code{max_min} range),
\item \code{\link[=make_metadata_vec]{make_metadata_vec()}} for tokens derived from all \verb{*_text} columns in order,
\item \code{\link[=sanitize_filename]{sanitize_filename()}} to make a safe, lowercase slug.
}

Saving backends:
\itemize{
\item \code{engine = "ggsave"} (default): calls \code{\link[ggplot2:ggsave]{ggplot2::ggsave()}}, honoring \code{device}, \code{width}, \code{height},
\code{units}, \code{dpi}, \code{scale}, \code{bg}, and any extra \code{...} that \code{ggsave()} supports.
\item \code{engine = "grDevices"}: opens base devices (png/jpeg/tiff/bmp/pdf/svg) via \code{\link[=econ_viz_save_grdevices]{econ_viz_save_grdevices()}}.
\item \code{engine = "ragg"}: high-quality raster (png/jpeg/tiff) via \code{\link[=econ_viz_save_ragg]{econ_viz_save_ragg()}} (Suggests: ragg).
\item \code{engine = "svglite"}: vector SVG via \code{\link[=econ_viz_save_svglite]{econ_viz_save_svglite()}} (Suggests: svglite).
}
}
